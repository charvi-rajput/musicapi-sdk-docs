{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Tuneplay SDK This is a sample Mkdocs generated Tuneplay Music API SDK Documentation. The TunePlay SDK provides a simple and powerful way to interact with the TunePlay Music API. Use it to search for playlists, manage user playlists, and more, all with a few lines of code. Installation Learn how to install the TunePlay SDK in both JavaScript and Python environments. Initialisation Initialize the SDK with your API key to start accessing TunePlay features. Authentication Authenticate users via Basic Authorization to access personal playlists, and more. Usage Examples Perform keyword-based searches to find music tracks & fetch, manage and display user-created or saved playlists. Error Handling Handle API and SDK-level errors gracefully in your applications. Type Definitions Explore the type definitions and data models used across SDK responses. Frequently Asked Questions Find answers to common questions about using the SDK. Need Help? Have questions or issues? Contact our team at support@muzicplayz.com","title":"Home"},{"location":"#welcome-to-tuneplay-sdk","text":"This is a sample Mkdocs generated Tuneplay Music API SDK Documentation. The TunePlay SDK provides a simple and powerful way to interact with the TunePlay Music API. Use it to search for playlists, manage user playlists, and more, all with a few lines of code.","title":"Welcome to Tuneplay SDK"},{"location":"#installation","text":"Learn how to install the TunePlay SDK in both JavaScript and Python environments.","title":"Installation"},{"location":"#initialisation","text":"Initialize the SDK with your API key to start accessing TunePlay features.","title":"Initialisation"},{"location":"#authentication","text":"Authenticate users via Basic Authorization to access personal playlists, and more.","title":"Authentication"},{"location":"#usage-examples","text":"Perform keyword-based searches to find music tracks & fetch, manage and display user-created or saved playlists.","title":"Usage Examples"},{"location":"#error-handling","text":"Handle API and SDK-level errors gracefully in your applications.","title":"Error Handling"},{"location":"#type-definitions","text":"Explore the type definitions and data models used across SDK responses.","title":"Type Definitions"},{"location":"#frequently-asked-questions","text":"Find answers to common questions about using the SDK.","title":"Frequently Asked Questions"},{"location":"#need-help","text":"Have questions or issues? Contact our team at support@muzicplayz.com","title":"Need Help?"},{"location":"faq/","text":"Frequently Asked Questions (FAQs) Q. Does the TunePlay SDK support both JavaScript and Python? A. Yes, the SDK is available for both JavaScript and Python, with equivalent functionality in both. Q. Does the SDK support mobile and desktop environments? A. Yes, the JavaScript SDK supports both web and mobile browsers. The Python SDK works in any environment that supports Python 3.7+. Q. How do I authenticate users securely? A. Use the built-in Basic authorization methods provided by the SDK to securely log users in. Q. What happens if a user tries to delete a file that no longer exists? A. The SDK will raise an error. You can catch it and show a message like: \u201cAlready Deleted\u201d Q. Are API rate limits enforced? A. No, the number of rate limits are none by default .","title":"FAQs"},{"location":"faq/#frequently-asked-questions-faqs","text":"","title":"Frequently Asked Questions (FAQs)"},{"location":"faq/#q-does-the-tuneplay-sdk-support-both-javascript-and-python","text":"A. Yes, the SDK is available for both JavaScript and Python, with equivalent functionality in both.","title":"Q. Does the TunePlay SDK support both JavaScript and Python?"},{"location":"faq/#q-does-the-sdk-support-mobile-and-desktop-environments","text":"A. Yes, the JavaScript SDK supports both web and mobile browsers. The Python SDK works in any environment that supports Python 3.7+.","title":"Q. Does the SDK support mobile and desktop environments?"},{"location":"faq/#q-how-do-i-authenticate-users-securely","text":"A. Use the built-in Basic authorization methods provided by the SDK to securely log users in.","title":"Q. How do I authenticate users securely?"},{"location":"faq/#q-what-happens-if-a-user-tries-to-delete-a-file-that-no-longer-exists","text":"A. The SDK will raise an error. You can catch it and show a message like: \u201cAlready Deleted\u201d","title":"Q. What happens if a user tries to delete a file that no longer exists?"},{"location":"faq/#q-are-api-rate-limits-enforced","text":"A. No, the number of rate limits are none by default .","title":"Q. Are API rate limits enforced?"},{"location":"supp/","text":"Support Have questions or issues? Contact our team at : Email : support@muzicplayz.com Docs : You\u2019re already here! For faster help, include your SDK version and a short code snippet that reproduces the issue.","title":"Support"},{"location":"supp/#support","text":"Have questions or issues? Contact our team at : Email : support@muzicplayz.com Docs : You\u2019re already here! For faster help, include your SDK version and a short code snippet that reproduces the issue.","title":"Support"},{"location":"auth/jspyauth/","text":"Authentication TunePlay SDK uses Basic Authorization for secure user authentication. Javascript await tp.auth.loginWithPopup () ; if ( tp.auth.isAuthenticated ()) { console.log ( 'User is logged in!' ) ; } Python tp.auth.login_with_browser () if tp.auth.is_authenticated () : print ( \"User is logged in!\" ) After login, basic authorization is automatically managed by the SDK.","title":"JS & Python Authentication"},{"location":"auth/jspyauth/#authentication","text":"TunePlay SDK uses Basic Authorization for secure user authentication.","title":"Authentication"},{"location":"auth/jspyauth/#javascript","text":"await tp.auth.loginWithPopup () ; if ( tp.auth.isAuthenticated ()) { console.log ( 'User is logged in!' ) ; }","title":"Javascript"},{"location":"auth/jspyauth/#python","text":"tp.auth.login_with_browser () if tp.auth.is_authenticated () : print ( \"User is logged in!\" ) After login, basic authorization is automatically managed by the SDK.","title":"Python"},{"location":"error/jspyerr/","text":"Error Handling Catch and handle errors for a better user experience. Javascript try { await tp . files . delete ( 'file_12345' ); console . log ( 'OK' ); } catch ( err ) { if ( err . message . includes ( 'not found' ) || err . code === 401 ) { console . error ( 'Error: Already Deleted' ); } else { console . error ( 'Deletion failed:' , err . message ); } } Python try : tp . files . delete ( 'file_12345' ) print ( \"OK\" ) except Exception as e : error_msg = str ( e ) . lower () if \"not found\" in error_msg or \"already deleted\" in error_msg : print ( \"Error: Already Deleted\" ) else : print ( f \"Deletion failed: { e } \" )","title":"JS & Python Error Handling"},{"location":"error/jspyerr/#error-handling","text":"Catch and handle errors for a better user experience.","title":"Error Handling"},{"location":"error/jspyerr/#javascript","text":"try { await tp . files . delete ( 'file_12345' ); console . log ( 'OK' ); } catch ( err ) { if ( err . message . includes ( 'not found' ) || err . code === 401 ) { console . error ( 'Error: Already Deleted' ); } else { console . error ( 'Deletion failed:' , err . message ); } }","title":"Javascript"},{"location":"error/jspyerr/#python","text":"try : tp . files . delete ( 'file_12345' ) print ( \"OK\" ) except Exception as e : error_msg = str ( e ) . lower () if \"not found\" in error_msg or \"already deleted\" in error_msg : print ( \"Error: Already Deleted\" ) else : print ( f \"Deletion failed: { e } \" )","title":"Python"},{"location":"initial/jspyini/","text":"Initialisation Before using TunePlay SDK, initialize it with your Basic Authorization. Javascript import TunePlay from '@tuneplay/sdk' ; const tp = new TunePlay ({ security: basauth }) ; Python from tuneplay_sdk import TunePlay tp = TunePlay ( security = basuth ) This setup prepares the SDK for making API calls on your behalf.","title":"JS & Python Initialisation"},{"location":"initial/jspyini/#initialisation","text":"Before using TunePlay SDK, initialize it with your Basic Authorization.","title":"Initialisation"},{"location":"initial/jspyini/#javascript","text":"import TunePlay from '@tuneplay/sdk' ; const tp = new TunePlay ({ security: basauth }) ;","title":"Javascript"},{"location":"initial/jspyini/#python","text":"from tuneplay_sdk import TunePlay tp = TunePlay ( security = basuth ) This setup prepares the SDK for making API calls on your behalf.","title":"Python"},{"location":"install/jspyins/","text":"Installation TunePlay SDK is available for both JavaScript and Python. Choose your language to get started. Javascript Install via npm : npm install @tuneplay/sdk or Install via yarn : yarn add @tuneplay/sdk Python Install via pip : pip install tuneplay-sdk After installation, you're ready to initialize the SDK with your Basic Authorization.","title":"JS & Python Installation"},{"location":"install/jspyins/#installation","text":"TunePlay SDK is available for both JavaScript and Python. Choose your language to get started.","title":"Installation"},{"location":"install/jspyins/#javascript","text":"Install via npm : npm install @tuneplay/sdk or Install via yarn : yarn add @tuneplay/sdk","title":"Javascript"},{"location":"install/jspyins/#python","text":"Install via pip : pip install tuneplay-sdk After installation, you're ready to initialize the SDK with your Basic Authorization.","title":"Python"},{"location":"type/jspytd/","text":"Type Definitions Understand the structure of objects returned by the SDK. Javascript (Typescript) type songs = { id : number ; title : string ; artist : string ; }; type playlist = { id : number ; name : string ; songs : songs []; }; Python (Typing) from typing import TypedDict , List class songs ( TypedDict ): id : int title : str artist : str class playlist ( TypedDict ): id : int name : str songs : List [ songs ]","title":"JS & Python Type Definitions"},{"location":"type/jspytd/#type-definitions","text":"Understand the structure of objects returned by the SDK.","title":"Type Definitions"},{"location":"type/jspytd/#javascript-typescript","text":"type songs = { id : number ; title : string ; artist : string ; }; type playlist = { id : number ; name : string ; songs : songs []; };","title":"Javascript (Typescript)"},{"location":"type/jspytd/#python-typing","text":"from typing import TypedDict , List class songs ( TypedDict ): id : int title : str artist : str class playlist ( TypedDict ): id : int name : str songs : List [ songs ]","title":"Python (Typing)"},{"location":"use/get-user/","text":"Get User Playlists Fetch all playlists created or saved by the authorized user. Javascript const playlists = await tp . user . getPlaylists (); console . log ( playlists ); Python playlists = tp . user . get_playlists () print ( playlists )","title":"Get User Playlists"},{"location":"use/get-user/#get-user-playlists","text":"Fetch all playlists created or saved by the authorized user.","title":"Get User Playlists"},{"location":"use/get-user/#javascript","text":"const playlists = await tp . user . getPlaylists (); console . log ( playlists );","title":"Javascript"},{"location":"use/get-user/#python","text":"playlists = tp . user . get_playlists () print ( playlists )","title":"Python"},{"location":"use/srch/","text":"Search for Tracks Search across TunePlay\u2019s music library using simple keywords. Javascript const results = await tp . search . tracks ( 'jazz' ); results . forEach ( group => { group . songs . forEach ( song => { console . log ( ` ${ song . title } by ${ song . artist } ` ); }); }); Python results = tp . search . tracks ( 'jazz' ) for group in results : for song in group [ 'songs' ]: print ( f \" { song [ 'title' ] } by { song [ 'artist' ] } \" )","title":"Search for Tracks"},{"location":"use/srch/#search-for-tracks","text":"Search across TunePlay\u2019s music library using simple keywords.","title":"Search for Tracks"},{"location":"use/srch/#javascript","text":"const results = await tp . search . tracks ( 'jazz' ); results . forEach ( group => { group . songs . forEach ( song => { console . log ( ` ${ song . title } by ${ song . artist } ` ); }); });","title":"Javascript"},{"location":"use/srch/#python","text":"results = tp . search . tracks ( 'jazz' ) for group in results : for song in group [ 'songs' ]: print ( f \" { song [ 'title' ] } by { song [ 'artist' ] } \" )","title":"Python"}]}